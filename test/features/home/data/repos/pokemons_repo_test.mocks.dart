// Mocks generated by Mockito 5.3.2 from annotations
// in bayzat_test/test/features/home/data/repos/pokemons_repo_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:bayzat_test/core/utils/api_client.dart' as _i2;
import 'package:bayzat_test/features/home/domain/entities/pokemon.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;

import 'pokemons_repo_test.dart' as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeApiData_0<T> extends _i1.SmartFake implements _i2.ApiData<T> {
  _FakeApiData_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePokemon_1 extends _i1.SmartFake implements _i3.Pokemon {
  _FakePokemon_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ApiClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockApiClient extends _i1.Mock implements _i2.ApiClient {
  MockApiClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.ApiData<T>> get<T>(
    String? subPath, {
    Map<String, dynamic>? parameters,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [subPath],
          {#parameters: parameters},
        ),
        returnValue: _i4.Future<_i2.ApiData<T>>.value(_FakeApiData_0<T>(
          this,
          Invocation.method(
            #get,
            [subPath],
            {#parameters: parameters},
          ),
        )),
      ) as _i4.Future<_i2.ApiData<T>>);
  @override
  _i4.Future<_i2.ApiData<T>> post<T>(
    String? subPath, {
    dynamic body,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [subPath],
          {#body: body},
        ),
        returnValue: _i4.Future<_i2.ApiData<T>>.value(_FakeApiData_0<T>(
          this,
          Invocation.method(
            #post,
            [subPath],
            {#body: body},
          ),
        )),
      ) as _i4.Future<_i2.ApiData<T>>);
}

/// A class which mocks [Converter].
///
/// See the documentation for Mockito's code generation for more information.
class MockConverter extends _i1.Mock implements _i5.Converter {
  MockConverter() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Pokemon call(Map<String, dynamic>? map) => (super.noSuchMethod(
        Invocation.method(
          #call,
          [map],
        ),
        returnValue: _FakePokemon_1(
          this,
          Invocation.method(
            #call,
            [map],
          ),
        ),
      ) as _i3.Pokemon);
}
